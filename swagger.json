{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the APIs docs for Coders.Tokyo forum backend v1.0.0",
    "version": "1.0.0",
    "title": "Coders.Tokyo Forum",
    "contact": {
      "email": "danghongquang99@gmail.com"
    }
  },
  "externalDocs": {
    "description": "Find out more in repo on Github",
    "url": "http://github.com/hongquangraem/coders-tokyo-forum-backend"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "basePath": "/v1",
  "tags": [
    {
      "name": "auth",
      "description": "APIs for authentication route"
    },
    {
      "name": "user",
      "description": "APIs for user route"
    },
    {
      "name": "post",
      "description": "APIs for post route"
    },
    {
      "name": "stream",
      "description": "APIs for stream route"
    },
    {
      "name": "rank",
      "description": "APIs for ranking route"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "components": {
    "schemas": {
      "Author": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maximum": 20
          },
          "type": {
            "type": "string",
            "enum": [
              "author",
              "singer",
              "composer",
              "actor",
              "actress",
              "director"
            ]
          },
          "posts": {
            "type": "array",
            "xml": {
              "name": "postId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "tagName"
        ],
        "properties": {
          "tagName": {
            "type": "string",
            "maximum": 30
          },
          "posts": {
            "type": "array",
            "xml": {
              "name": "postId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "required": [
          "type",
          "topic",
          "content"
        ],
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/User"
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tagId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "comments": {
            "type": "array",
            "xml": {
              "name": "commentId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "discussion",
              "blog",
              "book",
              "food",
              "movie",
              "video",
              "song",
              "podcast"
            ]
          },
          "topic": {
            "type": "string",
            "maximum": 200
          },
          "description": {
            "type": "string",
            "maximum": 400
          },
          "content": {
            "type": "string"
          },
          "authors": {
            "type": "array",
            "xml": {
              "name": "authorId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Author"
            }
          },
          "cover": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string"
              }
            }
          },
          "likes": {
            "type": "array",
            "xml": {
              "name": "userId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "url": {
            "type": "string"
          },
          "media": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string"
              },
              "type": {
                "type": "object"
              },
              "signature": {
                "type": "string"
              },
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              },
              "format": {
                "type": "string"
              },
              "resource_type": {
                "type": "string"
              },
              "frame_rate": {
                "type": "number"
              },
              "bit_rate": {
                "type": "number"
              },
              "duration": {
                "type": "number"
              }
            }
          },
          "food": {
            "type": "object",
            "properties": {
              "foodName": {
                "type": "string",
                "required": true
              },
              "price": {
                "type": "number",
                "required": true
              },
              "location": {
                "type": "string",
                "maximum": 100,
                "required": true
              },
              "star": {
                "type": "number",
                "maximum": 5,
                "minium": 0,
                "required": true
              },
              "photos": {
                "type": "array",
                "public_id": {
                  "type": "string"
                },
                "required": true
              }
            }
          }
        }
      },
      "User": {
        "required": [
          "username",
          "password",
          "email"
        ],
        "properties": {
          "username": {
            "type": "string",
            "maximum": 20
          },
          "password": {
            "type": "string",
            "minimum": 6,
            "maximum": 128
          },
          "email": {
            "type": "string",
            "unique": true
          },
          "avatar": {
            "type": "object",
            "properties": {
              "public_id": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {}
          },
          "sex": {
            "type": "string",
            "mininum": 4,
            "maximum": 6
          },
          "age": {
            "type": "number"
          },
          "job": {
            "type": "string",
            "maximum": 30
          },
          "hobbies": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "maximum": 30
          },
          "rankId": {
            "$ref": "#/components/schemas/Rank"
          },
          "posts": {
            "type": "array",
            "xml": {
              "name": "postId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          },
          "likedPosts": {
            "type": "array",
            "xml": {
              "name": "postId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          },
          "savedPosts": {
            "type": "array",
            "xml": {
              "name": "postId",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          },
          "verifyCode": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number"
              },
              "expiresIn": {
                "type": "number"
              }
            }
          }
        }
      },
      "Comment": {
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Comment"
          },
          "userId": {
            "$ref": "#/components/schemas/User"
          },
          "postId": {
            "$ref": "#/components/schemas/Post"
          },
          "text": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Sign up account",
        "description": "",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "username": "hongquangraem",
                  "email": "danghongquang99@gmail.com",
                  "password": "123456789"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Register successfully"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already existed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "409",
                    "message": "Email already existed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "email": "danghongquang99@gmail.com",
                  "password": "12346578"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register successfully",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "access_token=abcd.efgh.ijklm; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string"
                            },
                            "links": {
                              "type": "array"
                            },
                            "hobbies": {
                              "type": "array"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          }
                        },
                        "access_token": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Register successfully",
                    "data": {
                      "user": {
                        "_id": "5d45334cc2077677930e60f2",
                        "links": [],
                        "hobbies": [],
                        "username": "danghongquang",
                        "email": "danghongquang99@gmail.com",
                        "createdAt": "2019-08-03T07:10:04.739Z",
                        "updatedAt": "2019-08-05T02:40:23.561Z"
                      },
                      "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNDUzMzRjYzIwNzc2Nzc5MzBlNjBmMiIsImVtYWlsIjoiZGFuZ2hvbmdxdWFuZzk5QGdtYWlsLmNvbSIsImlhdCI6MTU2NTEwNjk3NSwiZXhwIjoxNTY1MTEwNTc1fQ.BYXcssWsoK_aOvWCrcWnwXlM3kzUvYt-yNoMwR7822o"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Wrong password"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Logout successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Logout successfully"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token or token expired time",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "401",
                    "message": "Invalid token or token expired time"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Missing authorization token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Missing authorization token"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "auth"
        ],
        "summary": "Forgot Password",
        "operationId": "forgot-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "require": true
                  },
                  "confirmPassword": {
                    "type": "string",
                    "required": true
                  },
                  "code": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update password successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Update password successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Confirm password isn't matched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Confirm password isn't matched"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wrong code or code expired time",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Wrong code or code expired time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/send-verify-code": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Send Verify Code",
        "operationId": "send-verify-code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "require": true
                  }
                },
                "example": {
                  "email": "danghongquang99@gmail.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Send email verify code successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Send email verify code successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email is not registed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Email is not registed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "auth"
        ],
        "summary": "Change Password",
        "operationId": "change-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "required": true
                  },
                  "newPassword": {
                    "type": "string",
                    "require": true
                  },
                  "confirmPassword": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change password successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Change password successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "2 cases: 1) Wrong old password; 2) Confirm passowrd wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "2 cases: 1) Wrong old password; 2) Confirm passowrd wrong"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get profile",
        "operationId": "get-profile",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "sucess",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "sucess",
                    "data": {
                      "_id": "5d45334cc2077677930e60f2",
                      "links": [],
                      "hobbies": [],
                      "posts": [
                        "5d453353c2077677930e60f3"
                      ],
                      "likedPosts": [
                        "5d453353c2077677930e60f3"
                      ],
                      "username": "danghongquang",
                      "email": "danghongquang99@gmail.com",
                      "createdAt": "2019-08-03T07:10:04.739Z",
                      "updatedAt": "2019-08-07T04:05:05.883Z",
                      "savedPosts": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found user profile"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Update profile",
        "operationId": "update-profile",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "hobbies": {
                    "type": "array"
                  },
                  "links": {
                    "type": "object"
                  },
                  "sex": {
                    "type": "string"
                  },
                  "age": {
                    "type": "string"
                  },
                  "job": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "username": "mitxiu",
                "sex": "male",
                "age": 20,
                "job": "dev",
                "hobbies": [
                  "music, reading book"
                ],
                "links": [
                  {
                    "github": "https://github.com/hongquangraem"
                  },
                  {
                    "facebook": "https://facebook.com/spacemanraem"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Update profile successfully",
                    "data": {
                      "_id": "5d45334cc2077677930e60f2",
                      "links": [
                        {
                          "github": "https://github.com/hongquangraem"
                        },
                        {
                          "facebook": "https://facebook.com/spacemanraem"
                        }
                      ],
                      "hobbies": [
                        "music, reading book"
                      ],
                      "posts": [
                        "5d453353c2077677930e60f3"
                      ],
                      "likedPosts": [
                        "5d453353c2077677930e60f3"
                      ],
                      "username": "mitxiu",
                      "email": "danghongquang99@gmail.com",
                      "createdAt": "2019-08-03T07:10:04.739Z",
                      "updatedAt": "2019-08-07T08:53:02.446Z",
                      "savedPosts": [
                        "5d45349aa9cc662a0b94dbfb",
                        "5d453b0f757a757c42dfe781"
                      ],
                      "sex": "male",
                      "age": 20,
                      "job": "dev"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Update profile failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Update profile failed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found user to update",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found user to update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/avatars": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Upload avatar",
        "operationId": "upload-avatar",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update profile successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 200,
                    "message": "success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Upload avatar failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Update profile failed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found user to upload avatar",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found user to upload avatar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/avatar": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Delete avatar",
        "operationId": "delete-avatar",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete avatar successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": 200,
                    "message": "success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Delete avatar failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Delete avatar failed"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found user to delete avatar",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found user to delete  avatar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/by-tag": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "get posts by tag",
        "operationId": "get-posts-by-tag",
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "number"
                        },
                        "currentPage": {
                          "type": "number"
                        },
                        "totalPage": {
                          "type": "number"
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Get posts by tag failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Get posts by tag failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "get one post",
        "operationId": "get-one-post",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "2 cases: 1) Type query is required 2) this ${type} is not supported yet",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "2 cases: 1) Type query is required 2) this ${type} is not supported yet"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ${type}",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found ${type}"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "externalDocs": {
          "description": "To edit post you have to follow in the detail docs here",
          "url": "https://docs.google.com/document/d/1jBw9uiBkXc8R-5bOcgbJFNIGcbihT6367qNIY7njvYk/edit#"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "edit post",
        "operationId": "edit-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "blog",
                "discussion",
                "book",
                "food",
                "movie",
                "song",
                "podcast"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "audio": {
                    "type": "string",
                    "format": "binary"
                  },
                  "video": {
                    "type": "string",
                    "format": "binary"
                  },
                  "foodPhotos": {
                    "type": "string",
                    "format": "binary"
                  },
                  "foodName": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "star": {
                    "type": "number"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "authors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "author",
                            "singer",
                            "composer",
                            "actor",
                            "actress",
                            "director"
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "tags": [
                    "ubuntu",
                    "linux"
                  ],
                  "authors": [
                    {
                      "items": {
                        "name": "trinh cong son",
                        "type": "composer"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edit post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Edit post successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Edit post failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Edit post failed"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "delete post",
        "operationId": "delete-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "blog",
                "discussion",
                "book",
                "food",
                "movie",
                "song",
                "podcast"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Delete post successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Delete post failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Delete post failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "externalDocs": {
          "description": "To create post you have to follow in the detail docs here",
          "url": "https://docs.google.com/document/d/1jBw9uiBkXc8R-5bOcgbJFNIGcbihT6367qNIY7njvYk/edit#"
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "create new post",
        "operationId": "create-new-post",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "blog",
                "discussion",
                "book",
                "food",
                "movie",
                "song",
                "podcast"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "audio": {
                    "type": "string",
                    "format": "binary"
                  },
                  "video": {
                    "type": "string",
                    "format": "binary"
                  },
                  "foodPhotos": {
                    "type": "string",
                    "format": "binary"
                  },
                  "foodName": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "star": {
                    "type": "number"
                  },
                  "topic": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "authors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "author",
                            "singer",
                            "composer",
                            "actor",
                            "actress",
                            "director"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Create new post successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Create new $post failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Create new post failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/users/{userId}/": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "get posts of user",
        "operationId": "get-posts-of-user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "book",
                  "blog",
                  "dicussion",
                  "movie",
                  "food",
                  "video",
                  "song",
                  "podcast"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "number"
                        },
                        "currentPage": {
                          "type": "number"
                        },
                        "totalPage": {
                          "type": "number"
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "2 cases: 1)Type query is required 2) This ${type} type is not supported yet`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "2 cases: 1)Type query is required 2) This ${type} type is not supported yet`"
                  }
                }
              }
            }
          },
          "404": {
            "description": "2 cases: 1)Not found user to get ${type} 2) Not found ${type}`",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "2 cases: 1)Not found user to get ${type} 2) Not found ${type}`"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/saved-posts/users/{userId}": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "get saved posts of user",
        "operationId": "get-saved-posts-of-user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "pageSize": {
                          "type": "number"
                        },
                        "currentPage": {
                          "type": "number"
                        },
                        "totalPage": {
                          "type": "number"
                        }
                      }
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Get saved posts failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Get saved posts failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/like": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "like post",
        "operationId": "like-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Like post succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Like post succesfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Like post failed, try later",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Like post failed, try later"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found post to like",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found post to like"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/unlike": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "unlike post",
        "operationId": "unlike-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unlike post succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Unlike post succesfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unlike post failed, try later",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Unlike post failed, try later"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found post to unlike",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found post to unlike"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/save": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "save post",
        "operationId": "save-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Save post succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Save post succesfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Save post failed, try later",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Save post failed, try later"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found post to save",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found post to save"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/unsave": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "post"
        ],
        "summary": "unsave post",
        "operationId": "unsave-post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unsave post succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "200",
                    "message": "Unsave post succesfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unsave post failed, try later",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "400",
                    "message": "Unsave post failed, try later"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found post to unsave",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Not found post to unsave"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stream": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "stream"
        ],
        "summary": "index",
        "description": "Get 5 newest posts of each type",
        "operationId": "index-stream",
        "responses": {
          "200": {
            "description": "Get newest posts successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "totalPage": {
                          "type": "number"
                        },
                        "pageSize": {
                          "type": "number"
                        },
                        "currentPage": {
                          "type": "number"
                        }
                      }
                    },
                    "data": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "status": 200,
                    "message": "Get newest posts successfully",
                    "metadata": {
                      "totalPage": 9,
                      "pageSize": 5,
                      "currentPage": 1
                    },
                    "data": [
                      {
                        "newestBlogs": [
                          {
                            "_id": "5d4565d8285d506a34e9f984",
                            "tags": null,
                            "comments": [],
                            "likes": [],
                            "userId": "5d45334cc2077677930e60f2",
                            "topic": "edit topic v2",
                            "description": "edit description v2",
                            "content": "edit content v2",
                            "type": "blog",
                            "cover": null,
                            "createdAt": "2019-08-03T10:46:02.987Z",
                            "updatedAt": "2019-08-03T10:46:02.987Z"
                          }
                        ]
                      },
                      {
                        "newestBookReviews": []
                      },
                      {
                        "newestBookReviews": []
                      },
                      {
                        "newestFoodReviews": []
                      },
                      {
                        "newestMovieReviews": []
                      },
                      {
                        "newestVideos": []
                      },
                      {
                        "newestSongs": []
                      },
                      {
                        "newestPodcasts": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error not defined yet",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "404",
                    "message": "Error not defined yet"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}